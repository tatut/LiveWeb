Class {
	#name : #SlHTMLRenderer,
	#superclass : #HTMLRenderer,
	#category : #'LiveWeb-Shoelace'
}

{ #category : #compiling }
SlHTMLRenderer class >> compileSlTags [ 
 #( 'sl-alert' 'sl-animated-image' 'sl-animation' 'sl-avatar'
    'sl-badge' 'sl-breadcrumb' 'sl-breadcrumb-item' 'sl-button' 'sl-button-group'
    'sl-card' 'sl-carousel' 'sl-carousel-item' 
    'sl-checkbox' 'sl-color-picker' 'sl-copy-button'
    'sl-details' 'sl-dialog' 'sl-divider' 'sl-drawer' 'sl-dropdown' 
    'sl-format-bytes' 'sl-format-date' 'sl-format-number' 
    'sl-icon' 'sl-icon-button' 'sl-image-comparer' 'sl-include' 'sl-input'
    'sl-menu' 'sl-menu-item' 'sl-menu-label' 'sl-mutation-observer'
    'sl-option'
    'sl-popup' 'sl-progress-bar' 'sl-progress-ring' 
    'sl-qr-core' 
    'sl-radio' 'sl-radio-button' 'sl-radio-group' 'sl-range' 'sl-rating' 'sl-relative-time' 'sl-resize-observer' 
    'sl-select' 'sl-skeleton' 'sl-spinner' 'sl-split-panel' 'sl-switch'
    'sl-tab' 'sl-tab-group' 'sl-tab-panel' 'sl-tag' 'sl-textarea' 'sl-tooltip'
    'sl-tree' 'sl-tree-item' 
    'sl-visually-hidden' ) do: [:tag |
		| parts selector |
		parts := tag splitOn: $-.
		selector := (String streamContents: [ :s | 
			s << parts first.
			parts allButFirstDo: [ :p | s << p capitalized ]
		]).
		self compile: ('{1}: attrs with: content
		  self renderCustom: ''{2}'' attrs: attrs with: content' format: { selector. tag}).
		self compile: ('{1}: attrsOrContent 
		  self renderCustom: ''{2}'' with: attrsOrContent' format: { selector. tag }).
  ]
	
    
]

{ #category : #'instance creation' }
SlHTMLRenderer class >> on: aHTMLRenderer [ 
 ^ self new out: aHTMLRenderer out
]

{ #category : #'as yet unclassified' }
SlHTMLRenderer >> eventJS: eventName [ 
 "Build an event JS code for JSON object to send back. The event is named 'e' in the 
  JS function."
 ^ String streamContents: [ :js | 
	js << '{"type": e.type'.
	eventName = 'sl-change' ifTrue: [ js << ', "checked": e.target.checked' ].
	js << '}'
	 ]
]

{ #category : #'as yet unclassified' }
SlHTMLRenderer >> groupAttrs: attrs regular: regular event: event [ 
 "Go through all attributes and add them to either regular or event collections"
 (attrs isDictionary ifTrue: [ attrs associations ] ifFalse: [attrs])
  do: [ :attr |
	(attr key takeFirst: 6) = 'on-sl-' 
	ifTrue: [ event add: attr ]
	ifFalse: [ regular add: attr ]
	].
  
]

{ #category : #rendering }
SlHTMLRenderer >> renderCustom: tag attrs: attrs with: content [ 
  | eventAttrs regularAttrs customId |
  customId := self renderCustomTag: tag. 
  eventAttrs := OrderedCollection new.
  regularAttrs := OrderedCollection new.
  self groupAttrs: attrs regular: regularAttrs  event: eventAttrs.
  self renderAttrs: regularAttrs. 
  out << '>'.
  self renderContent: content.
  out << '</'; << tag; << '>'.
  self renderCustomEvents: eventAttrs id: customId.

]

{ #category : #rendering }
SlHTMLRenderer >> renderCustom: tag with: attrsOrContent [ 
  | customId |
  customId := self renderCustomTag: tag.
  (self isAttributes: attrsOrContent)
	ifTrue: [
		| eventAttrs regularAttrs |
		eventAttrs := OrderedCollection new.
		regularAttrs := OrderedCollection new.
	   self groupAttrs: attrsOrContent regular: regularAttrs  event: eventAttrs.
		self renderAttrs: regularAttrs. 
		out << '></'; << tag; << '>'.
		self renderCustomEvents: eventAttrs id: customId.
	]
	ifFalse: [ self renderContent: attrsOrContent ].
]

{ #category : #rendering }
SlHTMLRenderer >> renderCustomEvents: events id: customId [
 events isEmpty ifTrue: [ ^ nil ].
 "Output a script that finds the rendered element and adds listeners to it"
 self script: [  
	events do: [ :e |
		| cb type |
		type := e key allButFirst: 3.
		cb := ctx registerCallback: e value for: component. 
		out << 'const _'; << customId; << ' = document.getElementById("'; << customId; << '");
		_'; << customId; << '.addEventListener("'; << type; <<'",';
	<< 'e=>_lws('; << cb asString; << ', ['; << (self eventJS: type); <<']));'
 ]]
]

{ #category : #rendering }
SlHTMLRenderer >> renderCustomTag: tag [
  | customId |
  customId := '_lw_c_{1}' format: { ctx nextComponentId }.
  out << '<'; << tag; << ' id="'; << customId; <<'"'.
  ^ customId.

]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slAlert: attrsOrContent [ 
		  self renderCustom: 'sl-alert' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slAlert: attrs with: content [
		  self renderCustom: 'sl-alert' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slAnimatedImage: attrsOrContent [ 
		  self renderCustom: 'sl-animated-image' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slAnimatedImage: attrs with: content [
		  self renderCustom: 'sl-animated-image' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slAnimation: attrsOrContent [ 
		  self renderCustom: 'sl-animation' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slAnimation: attrs with: content [
		  self renderCustom: 'sl-animation' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slAvatar: attrsOrContent [ 
		  self renderCustom: 'sl-avatar' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slAvatar: attrs with: content [
		  self renderCustom: 'sl-avatar' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slBadge: attrsOrContent [ 
		  self renderCustom: 'sl-badge' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slBadge: attrs with: content [
		  self renderCustom: 'sl-badge' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slBreadcrumb: attrsOrContent [ 
		  self renderCustom: 'sl-breadcrumb' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slBreadcrumb: attrs with: content [
		  self renderCustom: 'sl-breadcrumb' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slBreadcrumbItem: attrsOrContent [ 
		  self renderCustom: 'sl-breadcrumb-item' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slBreadcrumbItem: attrs with: content [
		  self renderCustom: 'sl-breadcrumb-item' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slButton: attrsOrContent [ 
		  self renderCustom: 'sl-button' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slButton: attrs with: content [
		  self renderCustom: 'sl-button' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slButtonGroup: attrsOrContent [ 
		  self renderCustom: 'sl-button-group' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slButtonGroup: attrs with: content [
		  self renderCustom: 'sl-button-group' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slCard: attrsOrContent [ 
		  self renderCustom: 'sl-card' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slCard: attrs with: content [
		  self renderCustom: 'sl-card' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slCarousel: attrsOrContent [ 
		  self renderCustom: 'sl-carousel' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slCarousel: attrs with: content [
		  self renderCustom: 'sl-carousel' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slCarouselItem: attrsOrContent [ 
		  self renderCustom: 'sl-carousel-item' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slCarouselItem: attrs with: content [
		  self renderCustom: 'sl-carousel-item' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slCheckbox: attrsOrContent [ 
		  self renderCustom: 'sl-checkbox' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slCheckbox: attrs with: content [
		  self renderCustom: 'sl-checkbox' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slColorPicker: attrsOrContent [ 
		  self renderCustom: 'sl-color-picker' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slColorPicker: attrs with: content [
		  self renderCustom: 'sl-color-picker' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slCopyButton: attrsOrContent [ 
		  self renderCustom: 'sl-copy-button' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slCopyButton: attrs with: content [
		  self renderCustom: 'sl-copy-button' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slDetails: attrsOrContent [ 
		  self renderCustom: 'sl-details' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slDetails: attrs with: content [
		  self renderCustom: 'sl-details' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slDialog: attrsOrContent [ 
		  self renderCustom: 'sl-dialog' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slDialog: attrs with: content [
		  self renderCustom: 'sl-dialog' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slDivider: attrsOrContent [ 
		  self renderCustom: 'sl-divider' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slDivider: attrs with: content [
		  self renderCustom: 'sl-divider' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slDrawer: attrsOrContent [ 
		  self renderCustom: 'sl-drawer' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slDrawer: attrs with: content [
		  self renderCustom: 'sl-drawer' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slDropdown: attrsOrContent [ 
		  self renderCustom: 'sl-dropdown' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slDropdown: attrs with: content [
		  self renderCustom: 'sl-dropdown' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slFormatBytes: attrsOrContent [ 
		  self renderCustom: 'sl-format-bytes' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slFormatBytes: attrs with: content [
		  self renderCustom: 'sl-format-bytes' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slFormatDate: attrsOrContent [ 
		  self renderCustom: 'sl-format-date' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slFormatDate: attrs with: content [
		  self renderCustom: 'sl-format-date' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slFormatNumber: attrsOrContent [ 
		  self renderCustom: 'sl-format-number' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slFormatNumber: attrs with: content [
		  self renderCustom: 'sl-format-number' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slIcon: attrsOrContent [ 
		  self renderCustom: 'sl-icon' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slIcon: attrs with: content [
		  self renderCustom: 'sl-icon' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slIconButton: attrsOrContent [ 
		  self renderCustom: 'sl-icon-button' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slIconButton: attrs with: content [
		  self renderCustom: 'sl-icon-button' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slImageComparer: attrsOrContent [ 
		  self renderCustom: 'sl-image-comparer' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slImageComparer: attrs with: content [
		  self renderCustom: 'sl-image-comparer' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slInclude: attrsOrContent [ 
		  self renderCustom: 'sl-include' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slInclude: attrs with: content [
		  self renderCustom: 'sl-include' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slInput: attrsOrContent [ 
		  self renderCustom: 'sl-input' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slInput: attrs with: content [
		  self renderCustom: 'sl-input' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slMenu: attrsOrContent [ 
		  self renderCustom: 'sl-menu' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slMenu: attrs with: content [
		  self renderCustom: 'sl-menu' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slMenuItem: attrsOrContent [ 
		  self renderCustom: 'sl-menu-item' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slMenuItem: attrs with: content [
		  self renderCustom: 'sl-menu-item' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slMenuLabel: attrsOrContent [ 
		  self renderCustom: 'sl-menu-label' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slMenuLabel: attrs with: content [
		  self renderCustom: 'sl-menu-label' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slMutationObserver: attrsOrContent [ 
		  self renderCustom: 'sl-mutation-observer' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slMutationObserver: attrs with: content [
		  self renderCustom: 'sl-mutation-observer' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slOption: attrsOrContent [ 
		  self renderCustom: 'sl-option' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slOption: attrs with: content [
		  self renderCustom: 'sl-option' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slPopup: attrsOrContent [ 
		  self renderCustom: 'sl-popup' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slPopup: attrs with: content [
		  self renderCustom: 'sl-popup' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slProgressBar: attrsOrContent [ 
		  self renderCustom: 'sl-progress-bar' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slProgressBar: attrs with: content [
		  self renderCustom: 'sl-progress-bar' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slProgressRing: attrsOrContent [ 
		  self renderCustom: 'sl-progress-ring' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slProgressRing: attrs with: content [
		  self renderCustom: 'sl-progress-ring' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slQrCore: attrsOrContent [ 
		  self renderCustom: 'sl-qr-core' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slQrCore: attrs with: content [
		  self renderCustom: 'sl-qr-core' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slRadio: attrsOrContent [ 
		  self renderCustom: 'sl-radio' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slRadio: attrs with: content [
		  self renderCustom: 'sl-radio' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slRadioButton: attrsOrContent [ 
		  self renderCustom: 'sl-radio-button' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slRadioButton: attrs with: content [
		  self renderCustom: 'sl-radio-button' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slRadioGroup: attrsOrContent [ 
		  self renderCustom: 'sl-radio-group' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slRadioGroup: attrs with: content [
		  self renderCustom: 'sl-radio-group' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slRange: attrsOrContent [ 
		  self renderCustom: 'sl-range' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slRange: attrs with: content [
		  self renderCustom: 'sl-range' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slRating: attrsOrContent [ 
		  self renderCustom: 'sl-rating' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slRating: attrs with: content [
		  self renderCustom: 'sl-rating' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slRelativeTime: attrsOrContent [ 
		  self renderCustom: 'sl-relative-time' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slRelativeTime: attrs with: content [
		  self renderCustom: 'sl-relative-time' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slResizeObserver: attrsOrContent [ 
		  self renderCustom: 'sl-resize-observer' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slResizeObserver: attrs with: content [
		  self renderCustom: 'sl-resize-observer' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slSelect: attrsOrContent [ 
		  self renderCustom: 'sl-select' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slSelect: attrs with: content [
		  self renderCustom: 'sl-select' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slSkeleton: attrsOrContent [ 
		  self renderCustom: 'sl-skeleton' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slSkeleton: attrs with: content [
		  self renderCustom: 'sl-skeleton' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slSpinner: attrsOrContent [ 
		  self renderCustom: 'sl-spinner' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slSpinner: attrs with: content [
		  self renderCustom: 'sl-spinner' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slSplitPanel: attrsOrContent [ 
		  self renderCustom: 'sl-split-panel' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slSplitPanel: attrs with: content [
		  self renderCustom: 'sl-split-panel' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slSwitch: attrsOrContent [ 
		  self renderCustom: 'sl-switch' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slSwitch: attrs with: content [
		  self renderCustom: 'sl-switch' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slTab: attrsOrContent [ 
		  self renderCustom: 'sl-tab' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slTab: attrs with: content [
		  self renderCustom: 'sl-tab' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slTabGroup: attrsOrContent [ 
		  self renderCustom: 'sl-tab-group' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slTabGroup: attrs with: content [
		  self renderCustom: 'sl-tab-group' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slTabPanel: attrsOrContent [ 
		  self renderCustom: 'sl-tab-panel' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slTabPanel: attrs with: content [
		  self renderCustom: 'sl-tab-panel' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slTag: attrsOrContent [ 
		  self renderCustom: 'sl-tag' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slTag: attrs with: content [
		  self renderCustom: 'sl-tag' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slTextarea: attrsOrContent [ 
		  self renderCustom: 'sl-textarea' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slTextarea: attrs with: content [
		  self renderCustom: 'sl-textarea' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slTooltip: attrsOrContent [ 
		  self renderCustom: 'sl-tooltip' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slTooltip: attrs with: content [
		  self renderCustom: 'sl-tooltip' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slTree: attrsOrContent [ 
		  self renderCustom: 'sl-tree' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slTree: attrs with: content [
		  self renderCustom: 'sl-tree' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slTreeItem: attrsOrContent [ 
		  self renderCustom: 'sl-tree-item' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slTreeItem: attrs with: content [
		  self renderCustom: 'sl-tree-item' attrs: attrs with: content
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slVisuallyHidden: attrsOrContent [ 
		  self renderCustom: 'sl-visually-hidden' with: attrsOrContent
]

{ #category : #'autogenerated rendering' }
SlHTMLRenderer >> slVisuallyHidden: attrs with: content [
		  self renderCustom: 'sl-visually-hidden' attrs: attrs with: content
]
